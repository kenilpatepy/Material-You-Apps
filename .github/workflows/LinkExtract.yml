name: Extract and Filter Links

on:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:
  extract-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract and Filter Links
        run: |
          grep -oE 'http[s]?://[^<]*' README.md \
          | grep -Evi 'reddit\.com|apkmirror\.com|docs\.google\.com|1drv\.ms|m3\.material\.io|en\.wikipedia\.org|pling\.com|github\.com/TeaOwO/Material-You-Apps/assets|m3-markdown-badges\.vercel\.app|android\.stackexchange\.com|coolapk\.com|github\.com/TeaEndsAcronyms/Material-You-Apps/assets|apkmonk\.com' \
          | sed 's/[()]//g' \
          | sed 's/[<>]//g' \
          | sed 's/[0-9#]//g' \
          | sed 's/ 🍴Fork/`\\0`/g' > .github/outputs/Action-link.txt

      - name: Download Links with wget
        run: |
          max_retries=2
          while IFS= read -r link; do
            retries=0
            while [ $retries -lt $max_retries ]; do
              wget --quiet --continue "$link" -P downloads/ || {
                echo "Failed to download: $link" >> wget_errors.log
                retries=$((retries + 1))
              }
              if [ $? -eq 0 ]; then
                break
              fi
            done
          done < .github/outputs/Action-link.txt

      - name: Commit Changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add .github/outputs/Action-link.txt
          git commit -m "Update Outputs"
          git push origin HEAD

      - name: Check for Wget Errors
        run: |
          if [ -n "$(find downloads/ -type f -name 'index.html')" ]; then
            echo "There are errors with Wget."
          else
            echo "There are no Wget errors detected."
          fi
